{"version":3,"sources":["logo.svg","form/data.js","form/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormData","intro","logo","header","subheader","steps","id","question","typeAnswer","fieldId","required","displaySubmit","firstName","options","labels","outro","Form","props","typesOfAnswered","valid","invalid","unanswered","handleKeyBoardPress","event","keyCode","step","state","handleGetStartedClick","lastStep","handleNextStep","introElement","classList","add","setTimeout","setState","stepInfo","find","item","value","length","newStep","stepElement","handleTextInputChange","stateKey","target","handleScaleChange","handleChoiceListChange","typeChoice","validValue","newValue","includes","filter","push","handleChoiceListMouseOver","bulletValue","innerHTML","handleChoiceListMouseLeave","remove","renderIntro","className","ref","element","src","onClick","renderOutro","outroElement","width","renderAnswer","type","placeholder","autoFocus","onChange","map","activeClass","key","bulletArray","toUpperCase","split","index","isSelected","onMouseOver","onMouseLeave","renderRequiredContainer","renderSubmitButton","hiddenClass","renderStep","renderContent","stateModel","reduce","a","b","document","addEventListener","this","prevProps","prevState","console","log","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1025200.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const FormData = {\n  intro: {\n    logo: null,\n    header: 'The Ultimate Drunk Test',\n    subheader: \"We're so glad you are trying to find out how drunk you are.\\nThough to be honest, you might already be way too drunk if you are interested in this kind of quiz.\"\n  },\n  steps: [\n    {\n      id: 1,\n      question: () => 'First up, what should we call you?',\n      typeAnswer: 'text',\n      fieldId: 'firstName',\n      required: true,\n      displaySubmit: true\n    },\n    {\n      id: 2,\n      question: ({ firstName }) => { return `Ok ${firstName}, and your surname?` },\n      typeAnswer: 'text',\n      fieldId: 'lastName',\n      required: true,\n      displaySubmit: true\n    },\n    {\n      id: 3,\n      question: () => 'Now, how old were you when you had your first drink?',\n      typeAnswer: 'number',\n      fieldId: 'age',\n      required: true,\n      displaySubmit: true\n    },\n    {\n      id: 4,\n      question: () => 'When you compare yourself to other people your age, are you concerned about your ability to keep drinking though you feel dizzy?',\n      typeAnswer: 'scale',\n      options: [0, 1, 2, 3, 4, 5],\n      labels: ['Not at all', 'Very much'],\n      fieldId: 'ability',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 5,\n      question: () => 'How significant do you think this impacts your ability to function in every-day activities?',\n      typeAnswer: 'scale',\n      options: [0, 1, 2, 3, 4, 5],\n      labels: ['Not at all', 'Somewhat', 'Very much'],\n      fieldId: 'activities',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 6,\n      question: () => \"How much do you agree or disagree with the following statement: 'I don't have a drinking problem, I do it for fun.'\",\n      typeAnswer: 'scale',\n      options: [0, 1, 2, 3, 4, 5],\n      labels: ['Disagree strongly', 'Agree strongly'],\n      fieldId: 'statement',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 7,\n      question: () => 'What types of things do you usually do on the weekend',\n      typeAnswer: 'multipleChoice',\n      options: ['Go out and drink tequila', 'Binge drinking', 'Watch movie and have beer', 'Go wine tasting', 'Netflix & beer'],\n      fieldId: 'weekend',\n      required: true,\n      displaySubmit: true\n    },\n    {\n      id: 8,\n      question: () => 'What day would you say you drink the most',\n      typeAnswer: 'oneChoice',\n      options: ['Friday', 'Saturday', 'Other'],\n      fieldId: 'day',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 9,\n      question: () => 'Which drink do you prefer?',\n      typeAnswer: 'oneChoice',\n      options: ['Beer', 'Whisky', 'Jägerbomb', 'Wine', 'Vodka', 'Other'],\n      fieldId: 'drink',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 10,\n      question: () => 'Are you a cool peruvian?',\n      typeAnswer: 'oneChoice',\n      options: ['Yes', 'No'],\n      fieldId: 'peruvian',\n      required: true,\n      displaySubmit: false\n    },\n    {\n      id: 11,\n      question: ({ firstName }) => { return `Great. Now what's your email, ${firstName}?` },\n      typeAnswer: 'text',\n      fieldId: 'email',\n      required: true,\n      displaySubmit: true\n    },\n    // todo: add func to allow type what other\n  ],\n  outro: {\n    logo: null,\n    header: 'YOU DRUNK!',\n    subheader: 'Though, we already said that in the beginning, so why would you fill the quiz anyway? Have a beer later! Bye!'\n  }\n}\n","import React from 'react'\nimport { FormData } from './data'\nimport './Form.scss'\n\nexport default class Form extends React.Component {\n  //   left = 37\n  // up = 38\n  // right = 39\n  //   down = 40\n\n  typesOfAnswered = {\n    valid: 'valid',\n    invalid: 'invalid',\n    unanswered: 'unanswered'\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.lastStep = FormData.steps.length\n    const fieldKeys = FormData.steps.map((item) => item.fieldId)\n    const stateModel = fieldKeys.reduce(\n      (a, b) => (\n        (a = { ...a, [b]: '', [`${b}Valid`]: this.typesOfAnswered.unanswered }),\n        a\n      ),\n      {}\n    )\n\n    this.state = {\n      step: 0, //this means intro\n      ...stateModel\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyBoardPress)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.step !== this.state.step) {\n      // if (this.state.step === 1) {\n      //   const stepElement = this[`step_container_1`]\n\n      //   if (stepElement) {\n      //     stepElement.classList.add('fadeIn')\n      //     return\n      //   }\n      // }\n\n      if (this.state.step > this.lastStep) {\n        this.outroElement.classList.add('fadeIn')\n\n        console.log('responses', this.state)\n        return\n      }\n\n      const stepElement = this[`step_container_${this.state.step}`]\n\n      if (stepElement) {\n        stepElement.classList.add('fadeSlideIn')\n      }\n    }\n  }\n\n  handleKeyBoardPress = (event) => {\n    const { keyCode } = event\n    const { step } = this.state\n\n    // when step 1 is already activated, then enable arrow keycode detect\n\n    // enter\n    if (keyCode === 13) {\n      if (step === 0) {\n        return this.handleGetStartedClick()\n      }\n\n      if (step > this.lastStep) {\n        return\n      }\n\n      return this.handleNextStep()\n    }\n  }\n\n  handleGetStartedClick = () => {\n    if (this.introElement) {\n      this.introElement.classList.add('fadeOut')\n    }\n\n    setTimeout(() => {\n      this.setState({\n        step: 1\n      })\n    }, 300)\n  }\n\n  handleNextStep = () => {\n    let { step } = this.state\n    const stepInfo = FormData.steps.find((item) => item.id === step)\n    const { id, question, typeAnswer, options, labels, fieldId } = stepInfo\n    const { [fieldId]: value } = this.state\n\n    if (\n      (typeAnswer === 'multipleChoice' && value.length === 0) ||\n      (typeAnswer !== 'multipleChoice' && !value)\n    ) {\n      this.setState({\n        [`${fieldId}Valid`]: this.typesOfAnswered.invalid\n      })\n\n      return\n    }\n\n    const newStep = step + 1\n    const stepElement = this[`step_container_${step}`]\n\n    if (stepElement) {\n      stepElement.classList.add('fadeSlideOut')\n    }\n\n    setTimeout(() => {\n      this.setState({\n        step: newStep,\n        [`${fieldId}Valid`]: this.typesOfAnswered.valid\n      })\n    }, 300)\n  }\n\n  handleTextInputChange = (stateKey) => (event) => {\n    this.setState({\n      [stateKey]: event.target.value,\n      [`${stateKey}Valid`]: event.target.value\n        ? this.typesOfAnswered.valid\n        : this.typesOfAnswered.unanswered\n    })\n  }\n\n  handleScaleChange = (stateKey, value) => () => {\n    this[`scale_option_${stateKey}_${value}`].classList.add('blink')\n\n    setTimeout(() => {\n      this.setState(\n        {\n          [stateKey]: value,\n          [`${stateKey}Valid`]: this.typesOfAnswered.valid\n        },\n        () => {\n          this.handleNextStep()\n        }\n      )\n    }, 300)\n  }\n\n  handleChoiceListChange = (stateKey, value, typeChoice) => () => {\n    let { [stateKey]: newValue } = this.state\n    let validValue\n\n    if (typeChoice === 'oneChoice') {\n      newValue = value\n      validValue = this.typesOfAnswered.valid\n    } else {\n      if (!newValue) {\n        newValue = []\n      }\n\n      if (newValue.includes(value)) {\n        newValue = newValue.filter((item) => item !== value)\n      } else {\n        newValue.push(value)\n      }\n\n      validValue =\n        newValue.length > 0\n          ? this.typesOfAnswered.valid\n          : this.typesOfAnswered.unanswered\n    }\n\n    this[`choice_option_${stateKey}_${value}`].classList.add('blink')\n\n    setTimeout(() => {\n      this.setState(\n        {\n          [stateKey]: newValue,\n          [`${stateKey}Valid`]: validValue\n        },\n        () => {\n          if (typeChoice === 'multipleChoice') {\n            return\n          }\n\n          this.handleNextStep()\n        }\n      )\n    }, 300)\n  }\n\n  handleChoiceListMouseOver = (fieldId, bulletValue) => () => {\n    this[\n      `choice_bullet_${fieldId}_${bulletValue}`\n    ].innerHTML = `key ${bulletValue}`\n    this[`choice_bullet_${fieldId}_${bulletValue}`].classList.add('hover')\n  }\n\n  handleChoiceListMouseLeave = (fieldId, bulletValue) => () => {\n    this[`choice_bullet_${fieldId}_${bulletValue}`].innerHTML = bulletValue\n    this[`choice_bullet_${fieldId}_${bulletValue}`].classList.remove('hover')\n  }\n\n  renderIntro = () => {\n    const { intro } = FormData\n\n    return (\n      <div\n        className='intro_container'\n        ref={(element) => {\n          this.introElement = element\n        }}>\n        <img src='https://icons.iconarchive.com/icons/jonathan-rey/simpsons/256/Homer-Simpson-03-Beer-icon.png' />\n        <div className='header'>{intro.header}</div>\n        <div className='subheader'>{intro.subheader}</div>\n        <div className='button_container'>\n          <button onClick={this.handleGetStartedClick}>Get Started!</button>\n          <span>\n            press <b>ENTER</b>\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  renderOutro = () => {\n    const { outro } = FormData\n\n    return (\n      <div\n        className='outro_container'\n        ref={(element) => {\n          this.outroElement = element\n        }}>\n        <div className='header_container'>\n          <img\n            src='https://www.freepngimg.com/thumb/artwork/84883-homer-emoticon-bart-area-marge-simpson.png'\n            width='50%'\n          />\n          <div className='header'>{outro.header}</div>\n        </div>\n        <div className='subheader'>{outro.subheader}</div>\n      </div>\n    )\n  }\n\n  renderAnswer = (stepInfo) => {\n    const { id, question, typeAnswer, options, labels, fieldId } = stepInfo\n    const { [fieldId]: value } = this.state\n\n    if (['text', 'number'].includes(typeAnswer)) {\n      return (\n        <input\n          type={typeAnswer}\n          placeholder='Type your answer here'\n          autoFocus\n          value={value}\n          onChange={this.handleTextInputChange(fieldId)}\n        />\n      )\n    }\n\n    if (typeAnswer === 'scale') {\n      return (\n        <div className='scale'>\n          <div className='options'>\n            {options.map((item) => {\n              const activeClass = value === item ? 'selected ' : ''\n\n              return (\n                <div\n                  className={`option ${activeClass}`}\n                  ref={(element) => {\n                    this[`scale_option_${fieldId}_${item}`] = element\n                  }}\n                  key={`scale_option_${fieldId}_${item}`}\n                  onClick={this.handleScaleChange(fieldId, item)}>\n                  {item}\n                </div>\n              )\n            })}\n          </div>\n          <div className='labels'>\n            {labels.map((item) => (\n              <div className='label' key={`scale_label_${fieldId}_${item}`}>\n                {item}\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    }\n\n    if (['multipleChoice', 'oneChoice'].includes(typeAnswer)) {\n      const bulletArray = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('')\n\n      return (\n        <div className='choice-list'>\n          {typeAnswer === 'multipleChoice' ? (\n            <div className='legend'>Choose as many as you like</div>\n          ) : null}\n          {options.map((item, index) => {\n            const activeClass =\n              typeAnswer === 'multipleChoice'\n                ? value.includes(item)\n                  ? 'selected'\n                  : ''\n                : value === item\n                ? 'selected'\n                : ''\n\n            const isSelected = activeClass === 'selected'\n\n            return (\n              <div\n                className={`choice ${activeClass}`}\n                ref={(element) => {\n                  this[`choice_option_${fieldId}_${item}`] = element\n                }}\n                key={`choice_option_${fieldId}_${item}`}\n                onMouseOver={this.handleChoiceListMouseOver(\n                  fieldId,\n                  bulletArray[index]\n                )}\n                onMouseLeave={this.handleChoiceListMouseLeave(\n                  fieldId,\n                  bulletArray[index]\n                )}\n                onClick={this.handleChoiceListChange(\n                  fieldId,\n                  item,\n                  typeAnswer\n                )}>\n                <div className='bullet_container'>\n                  <div\n                    className='bullet'\n                    ref={(element) => {\n                      this[\n                        `choice_bullet_${fieldId}_${bulletArray[index]}`\n                      ] = element\n                    }}>\n                    {bulletArray[index]}\n                  </div>\n                </div>\n\n                <div className='text'>{item}</div>\n                {isSelected ? <div className='check'></div> : null}\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  renderRequiredContainer = (stepInfo) => {\n    const { displaySubmit, required, fieldId, typeAnswer } = stepInfo\n    const { [`${fieldId}Valid`]: validValue } = this.state\n\n    if (!required) {\n      return null\n    }\n\n    let hiddenClass = ''\n\n    if (validValue !== this.typesOfAnswered.invalid) {\n      return null\n      // hiddenClass = 'hidden'\n    }\n\n    return (\n      <div className={`required_container ${hiddenClass}`}>\n        Please fill this in\n      </div>\n    )\n  }\n\n  renderSubmitButton = (stepInfo) => {\n    const { displaySubmit, required, fieldId, typeAnswer } = stepInfo\n    const { [fieldId]: value } = this.state\n\n    if (!displaySubmit) {\n      return null\n    }\n\n    let hiddenClass = ''\n\n    if (\n      (required && !value && typeAnswer !== 'multipleChoice') ||\n      (required && value.length === 0 && typeAnswer === 'multipleChoice')\n    ) {\n      hiddenClass = 'hidden'\n    }\n\n    return (\n      <div className={`submit_container ${hiddenClass}`}>\n        <button onClick={this.handleNextStep}>\n          OK <div className='check'></div>\n        </button>\n        <span>\n          press <b>ENTER</b>\n        </span>\n      </div>\n    )\n  }\n\n  renderStep = () => {\n    const { step } = this.state\n    const stepInfo = FormData.steps.find((item) => item.id === step)\n    const { id, question, typeAnswer, options, labels } = stepInfo\n\n    return (\n      <div\n        className='question_container'\n        key={`question_${id}`}\n        ref={(element) => {\n          this[`step_container_${id}`] = element\n        }}>\n        <div className='title'>\n          <div className='id'>{id}</div>\n          <div className='question'>{question(this.state)}</div>\n        </div>\n        <div className='answer'>{this.renderAnswer(stepInfo)}</div>\n        {this.renderRequiredContainer(stepInfo)}\n        {this.renderSubmitButton(stepInfo)}\n      </div>\n    )\n  }\n\n  renderContent = () => {\n    const { step } = this.state\n\n    if (step === 0) {\n      return this.renderIntro()\n    }\n\n    if (step > this.lastStep) {\n      return this.renderOutro()\n    }\n\n    return this.renderStep()\n  }\n\n  render() {\n    return <div className='form_container'>{this.renderContent()}</div>\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport Form from './form/Form'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}